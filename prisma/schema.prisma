generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Doctor {
  id         String   @id @default(uuid())
  username   String   @unique
  first_name String
  last_name  String
  email      String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // Relations
  slots           Slot[]
  recurrenceRules RecurrenceRule[]

  @@map("doctors")
}

enum SlotStatus {
  AVAILABLE
  BOOKED
}

enum RecurrenceType {
  ONE_TIME
  DAILY
  WEEKLY
}

model Slot {
  id               String     @id @default(uuid())
  startTime        DateTime
  endTime          DateTime
  duration         Int
  status           SlotStatus @default(AVAILABLE)
  doctorId         String
  recurrenceRuleId String? // Optional because some slots might be one-time
  created_at       DateTime   @default(now())
  updated_at       DateTime   @updatedAt

  // Relations
  doctor         Doctor          @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  recurrenceRule RecurrenceRule? @relation(fields: [recurrenceRuleId], references: [id], onDelete: Cascade)
  appointment    Appointment?

  @@map("slots")
}

model RecurrenceRule {
  id                String         @id @default(uuid())
  doctorId          String
  recurrenceType    RecurrenceType @default(ONE_TIME)
  endRecurrenceDate DateTime
  created_at        DateTime       @default(now())
  updated_at        DateTime       @updatedAt

  // Relations
  doctor Doctor @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  slots  Slot[]

  @@map("recurrence_rules")
}

model Appointment {
  id           String   @id @default(uuid())
  patientName  String
  patientEmail String
  phoneNumber  String
  notes        String?
  slotId       String   @unique // One-to-one relation with Slot
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  // Relations
  slot Slot @relation(fields: [slotId], references: [id], onDelete: Cascade)

  @@map("appointments")
}
